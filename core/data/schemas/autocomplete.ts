import { z } from "zod";

export const autocompleteEventAllSchema = z.object({
  // Tab autocomplete options - TODO - old json version?
  disable: z.boolean(),
  useFileSuffix: z.boolean(),
  maxPromptTokens: z.number(),
  debounceDelay: z.number(),
  maxSuffixPercentage: z.number(),
  prefixPercentage: z.number(),
  transform: z.boolean().optional(),
  template: z.string().optional(),
  multilineCompletions: z.enum(["always", "never", "auto"]),
  slidingWindowPrefixPercentage: z.number(),
  slidingWindowSize: z.number(),
  useCache: z.boolean(),
  onlyMyCode: z.boolean(),
  useRecentlyEdited: z.boolean(),
  disableInFiles: z.array(z.string()).optional(),
  useImports: z.boolean().optional(),

  // Other
  accepted: z.boolean().optional(),
  time: z.number(),
  prefix: z.string(),
  suffix: z.string(),
  prompt: z.string(),
  completion: z.string(),
  modelProvider: z.string(),
  modelName: z.string(),
  completionOptions: z.object({}),
  cacheHit: z.boolean(),
  filepath: z.string(),
  gitRepo: z.string().optional(),
  completionId: z.string(),
  uniqueId: z.string(),
  timestamp: z.number(),
});

export const autocompleteEventV1Schema = autocompleteEventAllSchema.pick({
  disable: true,
  useFileSuffix: true,
  maxPromptTokens: true,
  debounceDelay: true,
  maxSuffixPercentage: true,
  prefixPercentage: true,
  transform: true,
  template: true,
  multilineCompletions: true,
  slidingWindowPrefixPercentage: true,
  slidingWindowSize: true,
  useCache: true,
  onlyMyCode: true,
  useRecentlyEdited: true,
  disableInFiles: true,
  useImports: true,
  accepted: true,
  time: true,
  prefix: true,
  suffix: true,
  prompt: true,
  completion: true,
  modelProvider: true,
  modelName: true,
  completionOptions: true,
  cacheHit: true,
  filepath: true,
  gitRepo: true,
  completionId: true,
  uniqueId: true,
  timestamp: true,
});

export const autocompleteEventV2Schema = autocompleteEventAllSchema.pick({
  disable: true,
  useFileSuffix: true,
  maxPromptTokens: true,
  debounceDelay: true,
  maxSuffixPercentage: true,
  prefixPercentage: true,
  transform: true,
  template: true,
  multilineCompletions: true,
  slidingWindowPrefixPercentage: true,
  slidingWindowSize: true,
  useCache: true,
  onlyMyCode: true,
  useRecentlyEdited: true,
  disableInFiles: true,
  useImports: true,
  accepted: true,
  time: true,
  prefix: true,
  suffix: true,
  prompt: true,
  completion: true,
  modelProvider: true,
  modelName: true,
  completionOptions: true,
  cacheHit: true,
  filepath: true,
  gitRepo: true,
  completionId: true,
  uniqueId: true,
  timestamp: true,
});

export const autocompleteEventSchemas = z.object({
  all: autocompleteEventAllSchema,
  v1: autocompleteEventV1Schema,
  v2: autocompleteEventV2Schema,
});
