/**
 * Continue Hub IDE API
 * API for Continue IDE to fetch assistants and other related information. These endpoints are primarily used by the Continue IDE extensions for VS Code and JetBrains. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListAssistants200ResponseInnerConfigResult model module.
 * @module models/ListAssistants200ResponseInnerConfigResult
 * @version 1.0.0
 */
class ListAssistants200ResponseInnerConfigResult {
    /**
     * Constructs a new <code>ListAssistants200ResponseInnerConfigResult</code>.
     * @alias module:models/ListAssistants200ResponseInnerConfigResult
     * @param config {Object} The unrolled assistant configuration
     * @param configLoadInterrupted {Boolean} Whether the configuration loading was interrupted
     */
    constructor(config, configLoadInterrupted) { 
        
        ListAssistants200ResponseInnerConfigResult.initialize(this, config, configLoadInterrupted);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, config, configLoadInterrupted) { 
        obj['config'] = config;
        obj['configLoadInterrupted'] = configLoadInterrupted;
    }

    /**
     * Constructs a <code>ListAssistants200ResponseInnerConfigResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:models/ListAssistants200ResponseInnerConfigResult} obj Optional instance to populate.
     * @return {module:models/ListAssistants200ResponseInnerConfigResult} The populated <code>ListAssistants200ResponseInnerConfigResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListAssistants200ResponseInnerConfigResult();

            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], Object);
            }
            if (data.hasOwnProperty('configLoadInterrupted')) {
                obj['configLoadInterrupted'] = ApiClient.convertToType(data['configLoadInterrupted'], 'Boolean');
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListAssistants200ResponseInnerConfigResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListAssistants200ResponseInnerConfigResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListAssistants200ResponseInnerConfigResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['errors'])) {
            throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
        }

        return true;
    }


}

ListAssistants200ResponseInnerConfigResult.RequiredProperties = ["config", "configLoadInterrupted"];

/**
 * The unrolled assistant configuration
 * @member {Object} config
 */
ListAssistants200ResponseInnerConfigResult.prototype['config'] = undefined;

/**
 * Whether the configuration loading was interrupted
 * @member {Boolean} configLoadInterrupted
 */
ListAssistants200ResponseInnerConfigResult.prototype['configLoadInterrupted'] = undefined;

/**
 * Any errors that occurred during configuration loading
 * @member {Array.<String>} errors
 */
ListAssistants200ResponseInnerConfigResult.prototype['errors'] = undefined;






export default ListAssistants200ResponseInnerConfigResult;

