/**
 * Continue Hub IDE API
 * API for Continue IDE to fetch assistants and other related information. These endpoints are primarily used by the Continue IDE extensions for VS Code and JetBrains. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListAssistants200ResponseInner from '../models/ListAssistants200ResponseInner';
import ListAssistants401Response from '../models/ListAssistants401Response';
import ListAssistants404Response from '../models/ListAssistants404Response';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listAssistants operation.
     * @callback module:api/DefaultApi~listAssistantsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:models/ListAssistants200ResponseInner>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List assistants for IDE
     * Returns a complete list of assistants available to the user, with their full configurations, icons, and other metadata needed by the IDE to display and use them.  This endpoint performs a full refresh of the list of assistants, including unrolling configurations and resolving secrets. 
     * @param {Object} opts Optional parameters
     * @param {module:models/String} [alwaysUseProxy] Whether to always use the Continue-managed proxy for model requests
     * @param {String} [organizationId] ID of the organization to scope assistants to. If not provided, personal assistants are returned.
     * @param {module:api/DefaultApi~listAssistantsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:models/ListAssistants200ResponseInner>}
     */
    listAssistants(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'alwaysUseProxy': opts['alwaysUseProxy'],
        'organizationId': opts['organizationId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ListAssistants200ResponseInner];
      return this.apiClient.callApi(
        '/ide/list-assistants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
