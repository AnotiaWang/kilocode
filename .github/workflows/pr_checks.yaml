name: PR checks

on:
  pull_request:
    branches:
      - main
    paths:
      - "extensions/vscode/**"
      - "core/**"
      - "gui/**"
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node-setup.outputs.node-version }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Use Node.js from .nvmrc
        id: node-setup
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

  test-extension:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Cache extension dependencies
        uses: actions/cache@v3
        id: cache-extension
        with:
          path: |
            node_modules
            extensions/vscode/node_modules
          key: ${{ runner.os }}-ext-${{ hashFiles('package-lock.json', 'extensions/vscode/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-ext-

      - name: Install dependencies
        if: steps.cache-extension.outputs.cache-hit != 'true'
        run: |
          npm ci
          cd extensions/vscode && npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Run checks
        run: |
          cd extensions/vscode
          npx tsc --noEmit
          npm run lint

      - name: Run e2e tests
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 &
          export DISPLAY=:99
          cd extensions/vscode
          npm run package
          npm run e2e:ci

  test-core:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Cache core dependencies
        uses: actions/cache@v3
        id: cache-core
        with:
          path: |
            node_modules
            core/node_modules
          key: ${{ runner.os }}-core-${{ hashFiles('package-lock.json', 'core/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-core-

      - name: Install dependencies
        if: steps.cache-core.outputs.cache-hit != 'true'
        run: |
          npm ci
          cd core && npm ci
      - name: Run checks
        run: |
          cd core
          npx tsc --noEmit
          npm run lint
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Run tests
        run: |
          cd core
          npm test

  test-gui:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Cache GUI dependencies
        uses: actions/cache@v3
        id: cache-gui
        with:
          path: |
            node_modules
            gui/node_modules
          key: ${{ runner.os }}-gui-${{ hashFiles('package-lock.json', 'gui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-gui-

      - name: Install dependencies
        if: steps.cache-gui.outputs.cache-hit != 'true'
        run: |
          npm ci
          cd gui && npm ci

      - name: Run checks
        run: |
          cd gui
          npx tsc --noEmit

      - name: Run tests
        run: |
          cd gui
          npm test