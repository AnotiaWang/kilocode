name: PR checks

on:
  pull_request:
    branches:
      - main
    paths:
      - "extensions/vscode/**"
      - "core/**"
      - "gui/**"
      - ".github/workflows**"

jobs:
  install-root:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install root dependencies
        run: npm ci

  core-checks:
    needs: install-root
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

      - name: Install core dependencies
        run: |
          cd core
          npm ci

      - name: Type check and lint
        run: |
          cd core
          npx tsc --noEmit
          npm run lint
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  gui-checks:
    needs: [install-root, core-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: gui/node_modules
          key: ${{ runner.os }}-gui-node-modules-${{ hashFiles('gui/package-lock.json') }}

      - name: Install gui dependencies
        run: |
          cd gui
          npm ci

      - name: Type check
        run: |
          cd gui
          npx tsc --noEmit

  binary-checks:
    needs: [install-root, core-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: binary/node_modules
          key: ${{ runner.os }}-binary-node-modules-${{ hashFiles('binary/package-lock.json') }}

      - name: Install binary dependencies
        run: |
          cd binary
          npm ci

      - name: Type check
        run: |
          cd binary
          npx tsc --noEmit

  vscode-checks:
    needs: [install-root, core-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-root-node-modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: extensions/vscode/node_modules
          key: ${{ runner.os }}-vscode-node-modules-${{ hashFiles('extensions/vscode/package-lock.json') }}

      - name: Install vscode dependencies
        run: |
          cd extensions/vscode
          npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Type check and lint
        run: |
          cd extensions/vscode
          npx tsc --noEmit
          npm run lint

  core-tests:
    needs: [core-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('extensions/core/package-lock.json') }}

      - name: Run core tests
        run: |
          cd extensions/core
          npm test

  vscode-tests:
    needs: [vscode-checks, core-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: extensions/vscode/node_modules
          key: ${{ runner.os }}-vscode-node-modules-${{ hashFiles('extensions/vscode/package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

      - name: Install and setup Xvfb
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 &
          export DISPLAY=:99

      - name: Run VSCode e2e tests
        run: |
          cd extensions/vscode
          npm run package
          npm run e2e:ci

  gui-tests:
    needs: [gui-checks, core-checks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: actions/cache@v3
        with:
          path: gui/node_modules
          key: ${{ runner.os }}-gui-node-modules-${{ hashFiles('gui/package-lock.json') }}

      - uses: actions/cache@v3
        with:
          path: core/node_modules
          key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

      - name: Install GUI dependencies
        run: cd extensions/gui && npm ci
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Run gui tests
        run: |
          cd extensions/gui
          npm test
