name: CI

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Debug environment info
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "Prettier version: $(npx prettier --version)"
          echo "Platform: $(uname -a)"

      - name: Show formatting differences for all files
        run: |
          echo "Running prettier check to find unformatted files..."
          # Capture prettier output to a temp file
          npx prettier --check . > /tmp/prettier_output.txt 2>&1 || true
          
          echo "Full prettier output:"
          cat /tmp/prettier_output.txt
          echo ""
          
          # Extract files that need formatting
          UNFORMATTED_FILES=$(grep -E '^\[warn\]' /tmp/prettier_output.txt | sed 's/\[warn\] //' || true)
          
          if [ -z "$UNFORMATTED_FILES" ]; then
            echo "No files found in [warn] messages."
          else
            echo "Files that need formatting:"
            echo "$UNFORMATTED_FILES"
            echo ""
            echo "Showing diffs for each file:"
            echo "$UNFORMATTED_FILES" | while IFS= read -r file; do
              if [ -n "$file" ] && [ -f "$file" ]; then
                echo "======================================"
                echo "Diff for: $file"
                echo "======================================"
                # Create formatted version
                npx prettier "$file" > "/tmp/formatted_$(basename "$file")"
                # Show diff
                diff -u "$file" "/tmp/formatted_$(basename "$file")" || true
                echo ""
              fi
            done
          fi

      - name: Check code formatting
        run: npm run format:check

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 22, 24]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      # e2e tests are failing on Windows specifically - likely due to stdout flush issues
      - name: Run tests
        if: matrix.os != 'windows-latest'
        run: npm test

      - name: Run tests (excluding e2e on Windows)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: npm test -- --exclude='**/*.e2e.*' --exclude='**/e2e/**'

  review:
    uses: ./.github/workflows/continue-review.yaml
    secrets:
      CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
    with:
      prompt: |
        Please review the below changes for any mistakes. You can look around the codebase to investigate if needed. Look for:
         - React changes causing too many re-renders
         - Functions that are too long
         - Other potentially subtle bugs
        Keep your response concise and give a bullet pointed list of the findings, including suggested fixes for any problems you find.

  # GitHub does not have a way of requiring that all checks pass (you must manually select each job)
  # This action at least lets us manage the list of required tests via source control
  # so that creators of new jobs can add them to this list
  require-all-checks-to-pass:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - lint
      - format-check
      - test

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
