name: 'Setup VS Code E2E'
description: 'Build Linux extension and generate test matrix for E2E tests'
inputs:
  is_fork:
    description: 'Whether this is a fork (affects SSH tests)'
    required: false
    default: 'false'
outputs:
  test_file_matrix:
    description: 'JSON array of test files'
    value: ${{ steps.get-test-files.outputs.test_file_matrix }}

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"

    # Build the Linux extension first
    - name: Build VS Code extension
      uses: ./.github/actions/build-vscode-extension
      with:
        platform: linux
        arch: x64
        npm_config_arch: x64
        pre-release: false
        commit-sha: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

    # Cache for test matrix generation
    - name: Cache npm
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache-matrix-${{ hashFiles('core/package-lock.json', 'extensions/vscode/package-lock.json') }}

    - name: Cache packages node_modules
      uses: actions/cache@v4
      with:
        path: |
          packages/*/node_modules
        key: ${{ runner.os }}-packages-node-modules-${{ hashFiles('packages/*/package-lock.json') }}

    - name: Cache core node modules
      uses: actions/cache@v4
      with:
        path: core/node_modules
        key: ${{ runner.os }}-core-node-modules-${{ hashFiles('core/package-lock.json') }}

    - name: Cache vscode extension node modules
      uses: actions/cache@v4
      id: vscode-cache
      with:
        path: extensions/vscode/node_modules
        key: ${{ runner.os }}-vscode-node-modules-${{ hashFiles('extensions/vscode/package-lock.json') }}

    # Generate test matrix
    - name: Compile tests and get test files
      id: get-test-files
      shell: bash
      run: |
        if [ "${{ steps.vscode-cache.outputs.cache-hit }}" != "true" ]; then
          cd core
          npm ci
          cd ../extensions/vscode
          npm ci
        fi
        cd extensions/vscode
        npm run e2e:compile
        if [[ "${{ inputs.is_fork }}" == "true" ]]; then
          # Exclude SSH tests for forks
          FILES=$(ls -1 e2e/_output/tests/*.test.js | grep -v "SSH" | jq -R . | jq -s .)
        else
          # Include all tests for non-forks
          FILES=$(ls -1 e2e/_output/tests/*.test.js | jq -R . | jq -s .)
        fi
        echo "test_file_matrix<<EOF" >> $GITHUB_OUTPUT
        echo "$FILES" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      env:
        # https://github.com/microsoft/vscode-ripgrep/issues/9#issuecomment-643965333
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

    - name: Debug Outputs
      shell: bash
      run: |
        echo "Test files: ${{ steps.get-test-files.outputs.test_file_matrix }}"